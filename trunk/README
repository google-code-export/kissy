KISSY - An Enjoyable JavaScript Library

 * Source: http://code.google.com/p/kissy/
 * License: http://kissy.googlecode.com/svn/trunk/LICENSE

==============
   使   命
==============
让天下没有重复的前端代码！

==============
   愿   景
==============
小巧灵活，简洁实用，使用起来让人感觉愉悦。

Keep It
    Simple & Stupid, Short & Sweet, Slim & Sexy...
Yeah!

==============
   目   录
==============
 - assets:        全局性资源文件
 - build:         根据 src 内容，用 Ant 构建出来的发布文件
 - docs:          API 文档，以及实例说明和使用教程等文档
 - experimental:  实验基地，存放开发中的组件。成熟后，经审核，再转入 src
 - gallery:       存放正式发布的组件，这些组件很好，但使用场景不多
 - src:           存放正式发布的组件，这些组件很好，使用场景很多
 - thirtd-party:  第三方库
 - tools:         打包压缩等工具
 - archives:      打包存放特殊文件

==============
   代码结构
==============
内部代码组织：采用 module, sub module 来分拆和组织代码
外部调用接口：component 形式，包括工具型组件 utils 和 UI 型组件 widgets

==============
   命名约定
==============
原则：尽量避免潜在冲突，同时力求精简短小和见名知意。
 - 全局变量：       g_ks_comp_xxx   比如： g_ks_monitor_st
 - class/id 命名：  ks-comp-xxx     比如： ks-editor-toolbar-item
 - data 属性命名：  data-comp-xxx   比如： data-lazyload-src

==============
   其   它
==============
支持的浏览器： IE 6+, Firefox 3.5+, Safari 4+, Chrome 2+, Opera 10+
版本发布：奇数开发，偶数发布


==============
   开发流程
==============
为了让大家尽快的都参与到 kissy 的开发中来，下面总结一下组件开发流程：

1. 当你看到某些重复代码或想到某个好点子，想整理开发成一个通用组件时，就继续往下看。
2. 给你想写的组件取一个名字（取名很重要，没有固定的规范，但可以参考下 kissy 已有的组件名）。
3. 在 kissy/experimental 目录下用取好的名字建一个目录，这就是你接下来要辛苦耕耘的地方啦。如果没 svn 权
   限，骚扰那个花名叫玉伯的就是了。
4. 调研下现有的组件，整理成一份文档，可以参考 imagezoom/readme.txt, 简明扼要的记录下调研成果即可。
5. 在调研的基础上，进一步总结和梳理，定好组件的 public api. 建议也记录在 reademe.txt 里。

上面 5 步非常重要，以至于上面 5 步没有想清楚前，建议你不要写任何代码。

6. 将上面的产出，比如 readme.txt 通过 all@kissyui.com 告诉整个团队，团队会就你的想法和 public api 给出
   建议。适当的时候，会召开会议来讨论。
7. 第 6 步确认后，开始写代码。建议的文件列表：
         filename.js
         filename.css
         test.html
         build.properties
         build.xml
   build 从其它目录复制一份稍加修改即可，怎么修改不用多说，你会的。
   test.html 建议参考其它目录的 test.html, 这是单元测试文件，以后会用辅助工具自动定时帮你运行。
8. 写代码时，建议从 test.html 开始，特别是非 UI 组件。测试驱动开发的习惯还是挺不错的，能帮助我们
   写出更健壮更放心的代码。
9. 终于写好了，自测完成了。赶紧发邮件到 all@kissyui.com, 让大家都和你一块高兴，分享喜悦，同时
   review code, 给出建议。
10. 代码 review + 修改后（一般要经过几个轮回），就可以根据组件本身的通用性，决定转入 gallery 或 src
    目录正式发布了。

啰啰嗦嗦终于说完了，希望把问题说明白了，同时更希望大家能认可这种开发方式，或者提出更好的方式。最后
总结下，组件开发流程如下：

    第一阶段（预研）：想法 -> 取名 -> 建目录 -> 调研，产出 readme.txt  -> 讨论
    第二阶段（开发）：写代码  -> 测试驱动  -> review -> 重构 -> 正式发布

请大家尽量遵循以上流程来开发组件。
