<project name="common-build" basedir=".">
    <description>Common Build File</description>

    <dirname property="tools.dir" file="${ant.file.common-build}"/>
    <property name="root.dir" location="${tools.dir}/../"/>
    <property name="build.dir" location="${root.dir}/build/"/>
    <property name="third-party.dir" location="${root.dir}/third-party/"/>
    <property name="version" value="1.0.3"/>
    <property name="charset" value="GB18030"/>

    <!-- 引入第三方包 -->
    <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
    <typedef resource="org/tigris/subversion/svnant/svnantlib.xml" classpath="svnant.jar"/> 

    <!-- 清空与复制文件等准备工作 -->
    <target name="prepare">
        <mkdir dir="${build.dir}/${component.name}"/>        
        <delete>
            <fileset dir="${build.dir}/${component.name}" includes="*.css,*.js"/>
        </delete>
        <copy todir="${build.dir}/${component.name}">
            <fileset dir="${src.dir}" includes="${component.files}"/>
        </copy>
    </target>

    <!-- 压缩代码 -->
    <target name="compress">
        <!-- 用 YUICompressor 压缩 CSS -->
        <apply executable="java" verbose="true" dest="${build.dir}/${component.name}">
            <fileset dir="${build.dir}/${component.name}" includes="*.css"/>
            <arg line="-jar"/>
            <arg path="${tools.dir}/yuicompressor.jar"/>
            <arg line="--charset ${charset}"/>
            <srcfile/>
            <arg line="-o"/>
            <targetfile/>
            <mapper type="regexp" from="^(.*)\.(css|js)$" to="\1-min.\2"/>
        </apply>
        <!-- 用 Closure Compiler 压缩 JS -->
        <apply executable="java" verbose="true" dest="${build.dir}/${component.name}">
            <fileset dir="${build.dir}/${component.name}" includes="*.js"/>
            <arg line="-jar"/>
            <arg path="${tools.dir}/closure-compiler.jar"/>
            <arg line="--charset ${charset}"/>
            <arg value="--warning_level" />
            <arg value="QUIET" />
            <arg value="--js"/>
            <srcfile/>
            <arg value="--js_output_file"/>
            <targetfile/>
            <mapper type="regexp" from="^(.*)\.(css|js)$" to="\1-min.\2"/>
        </apply>
    </target>

    <!-- 对 JS 文件 ASCII 化 -->
    <target name="native2ascii" depends="compress">
        <mkdir dir="${build.dir}/${component.name}/tmp"/>
        <move todir="${build.dir}/${component.name}/tmp">
            <fileset dir="${build.dir}/${component.name}" includes="*-min.js"/>
        </move>
        <native2ascii encoding="${charset}"
                      src="${build.dir}/${component.name}/tmp"
                      dest="${build.dir}/${component.name}"
                      includes="*.js"/>
        <delete dir="${build.dir}/${component.name}/tmp"/>
    </target>

    <!-- 替换版本信息以及给文件加上版权信息 -->
    <target name="copyright">
        <tstamp>
            <format property="build.time" pattern="MMM d HH:mm" locale="en,UK"/>
            <format property="build.year" pattern="yyyy"/>
        </tstamp>
        <svn>
            <wcVersion path="${root.dir}" prefix="svn."/>
        </svn>
        <mkdir dir="${build.dir}/${component.name}/tmp"/>
        <move todir="${build.dir}/${component.name}/tmp">
            <fileset dir="${build.dir}/${component.name}" includes="*.css,*.js"/>
        </move>

        <for param="file">
            <path>
                <fileset dir="${build.dir}/${component.name}/tmp" includes="*.css,*.js"/>
            </path>
            <sequential>
                <concat destfile="@{file}.tmp" encoding="${charset}" outputencoding="${charset}">
                    <header filtering="no" trimleading="yes">/*
                        Copyright ${build.year}, KISSY UI Library v${version}
                        MIT Licensed
                        build: ${svn.revision.max} ${build.time}
                        */
                    </header>
                    <fileset file="@{file}" />
                </concat>
                <replaceregexp match="@VERSION@" replace="${version}" flags="g" byline="true" file="@{file}.tmp" />
                <move file="@{file}.tmp" tofile="@{file}"/>
            </sequential>
        </for>

        <move todir="${build.dir}/${component.name}">
            <fileset dir="${build.dir}/${component.name}/tmp" includes="*.css,*.js"/>
        </move>
        <delete dir="${build.dir}/${component.name}/tmp"/>
    </target>

    <target name="common.build" depends="prepare,compress,native2ascii,copyright">
    </target>
</project>
