#HTML5 时代的先行者
#为了向HTML5 靠的更近，也为了更有自己的特色。

= 版本 =
  * ||2.0||          20100629||

= 介绍 =

经过了针对 YUI的 SWFStore多次改良后，现有代码已无法满足维护的和扩展的需要。此次更新主要是为了不仅仅支持JS 。 更重要的是也要面向 as。
因此独立写了一个新的版本。

另外加入了 [AboutWhitelist_CN 白名单机制] ，并融入了 最新 [AboutAJBridge_CN AJBridge 1.5版本]。

参考了 HTML5 Web storage 接口 http://dev.w3.org/html5/webstorage/ 和事件  并融入了  SWFStore 中。

= 关键变更 =
  * 去掉了YUIBridge 加入了 AJBridge。
  * 加入最新的白名单验证方式。
  * 公开参数关键字变更
  || *YUIBridge* || *AJBridge* || 
  || shareData || 已取消 ||
  || useCompression || useCompression ||
  || browser || browser ||
  * 公开方法变更
  || *YUIBridge* || *AJBridge* || 
  || getValueOf() || getItem() || 
  || getItems() || 已取消 || 
  || getValueAt() || 已取消 || 
  || getNameAt()  || key() || 
  || getLength() || getLength() || 
  || getModificationDate() || getModificationDate() || 
  || calculateCurrentSize() || getSize() || 
  || setItem() || setItem() || 
  || removeItem() || removeItem() || 
  || removeItemAt() || 已取消 || 
  || clear() || clear() || 
  || setSize() || setMinDiskSpace() || 
  || displaySettings() || displaySettings() || 
  || getTypeOf() || 已取消 || 
  || getTypeAt() || 已取消 || 
  || setUseCompression() || 已取消,由swf传参配置 || 
  || getUseCompression() || getUseCompression() || 
  || setShareData() || 已取消。数据将永久跨域跨浏览器，使用前请考虑[AboutWhitelist_CN 白名单机制] || 
  || getShareData() || 已取消 ||
  || hasAdequateDimensions() || hasAdequateDimensions() ||
  * 公开事件变更（保留的则都加了前缀Store，保持事件命名空间）
 || *YUIBridge* || *AJBridge* || 
 || save || storage ||
 || openingDialog || 已取消 ||
 || inadequateDimensions || 已取消 ||
 || error || 已取消 ||
 || securityError || 已取消 ||
 || contentReady || Store:contentReady||
 || pending|| Store:pending ||
 || quotaExceededError || 已取消 ||
 || success || Store:success ||
 || 不存在  ||  Store:clear ||
 || 不存在 || `StoreError`:untrustedDomain ||
 || 不存在 || Store:initialization ||
 || 不存在 || Store:showSettings ||
 || 不存在 || `StoreError`:uncompress ||
 || 不存在 || `StoreError`:flush ||
 || 不存在 || `StoreError`:showSettings ||
 || 不存在 ||Store:new||


= 详情 =

== 公开的参数关键字： ==
注意，传值都为String
=== useCompression ===
  * 使用压缩标记
  * 类型： String
  * 默认为"true".
=== browser===
  * 指定浏览器专用的本地存储
  * 类型： String
  * 默认为 ""

== 公开给JS的方法： ==
_格式：function(in arguments:type):return-type_
_其中:_
_ `*` 表示无类型，需要再次匹配或判断。_
_void 表示无返回。_

=== getLength():uint ===
  * 获取 key的 hash表的长度。相当于key的个数。
  * 如果没有key 则返回 0
  * 可能产生的事件：
     # `StoreError`:uncompress
=== getItem(key: String):`*` ===
  * 获得key下的值。
  * 没有则返回 null。
  * 可能产生的事件：
     # `StoreError`:uncompress
=== setItem(key:String,data:`*`): void ===
  * 设置key下的值。
  * data可以是任何类型。
  * 当key 是已存在且值不同的则返回的 storage 事件，其中的 info 为 “update”。
  * 当key 是不存在的则返回的 storage 事件，其中的 info 为 “add”。
  * 当key 是已存在且值也相同的则不会做任何事情 ：）
  * 记录修改日期。
  * 可能产生的事件：
     # `StoreError`:uncompress
     # storage
     # Store:pending
     # `StoreError`:flush
=== key(index: int): String ===
  * 从key-hash表中获得此关键字。
  * 没有则返回 null。
  * 可能产生的事件：
     # `StoreError`:uncompress
=== removeItem(key:String): void ===
  * 删除key下的值。
  * 如果找不到 key 在key-hash中则什么也不做。
  * 如果找到，则返回的 storage 事件，其中的 info 为 “delete”。
  * 记录修改日期。
  * 可能产生的事件：
     # `StoreError`:uncompress
     # storage
     # Store:pending
     # `StoreError`:flush
=== clear(): void ===
  * 清空所有内容。原则上则是销毁存在的数据文件。这个版本有个小小改动，将重新创建一个空存档，并再次记录修改日期。
  * 记录修改日期。
  * 可能产生的事件：
     # `StoreError`:uncompress
     # storage
     # Store:pending
     # `StoreError`:flush
     # Store:clear
=== getSize(): uint ===
  * 获得已存储数据量。
  * 单位 B（字节）
  * 可能产生的事件：
     # `StoreError`:uncompress
=== setMinDiskSpace(value: int): String ===
  * 设置存储数据的磁盘空间大小，默认就具备100K。
  * 注意，这将引发Flash内部的安全控制面板，使用此功能时，请保证swf显示大小至少有215*138像素大小。
  * 可能产生的事件：
     # `StoreError`:uncompress
     # Store:showSettingsError
=== getUseCompression(): Boolean ===
  * 查看是否使用了压缩。
  * 若要改变，请在初始化的时候通过useCompression进行配置。
=== displaySettings(): void ===
  * 显示用户自定义本地存储空间大小。默认就具备100K。
  * 注意，这将引发Flash内部的安全控制面板，使用此功能时，请保证swf显示大小至少有215*138像素大小。
  * 可能产生的事件：
     # Store:showSettings
     # Store:showSettingsError

=== hasAdequateDimensions(): Boolean ===
  * 验证是否有足够的空间
  * 如果SWF不满足 215*138像素大小 则返回 false
=== getModificationDate(): Date ===
  * 获取最后一次修改时间


== 公开给JS的事件 ==
=== storage ===
  * 发生写操作成功时，如 removeItem() 、 clear()、  setItem() 等引发。
=== Store:contentReady ===
  * 当本地存储就绪
=== Store:pending ===
  * 可能已达到存储上线，需要删除后进行。
=== Store:success ===
  * 设置磁盘空间大小后的事件
=== Store:clear ===
  * 清除一切数据。慎用。
=== `StoreError`:untrustedDomain ===
  * 不受信任的域。swf所在的web页的域名没有加入到 白名单中。
=== Store:initialization ===
  * 本地存储初始化完成
=== Store:showSettings ===
  * 成功显示安全控制面板  
=== `StoreError`:uncompress ===
  * 数据解压缩失败，可能不需要解压缩。
=== `StoreError`:flush ===
  * 存入失败 
  * 请捕获 事件中的 data 或者 info获得更详细的信息
=== `StoreError`:showSettings  ===
  * 显示安全控制面板失败。请保证swf显示大小至少有215*138像素大小。
=== Store:new ===
  * 找不到本地数据或者从未创立本地数据时会给出此事件。

详细：
_"N/A" 表示不适用_
  <table border="1">
     <thead>
        <th>type</th>
        <th>bubbles</th>
        <th>cancelable</th>
        <th>key</th>
        <th>info</th>
        <th>oldValue</th>
        <th>newValue</th>
     </thead>
     <tbody>
        <tr>
           <td>Store:contentReady</td>
           <td>N/A</td>
           <td>N/A</td>
           <td>N/A</td>
           <td>N/A</td>
           <td>N/A</td>
           <td>N/A</td>
        </tr>
     </tbody>
     <tbody>
        <tr>
           <td>Store:pending</td>
           <td>false</td>
           <td>true</td>
           <td>_key_</td>
           <td>null</td>
           <td>null</td>
           <td>null</td>
        </tr>
     </tbody>
     <tbody>
        <tr>
           <td>Store:success</td>
           <td>false</td>
           <td>true</td>
           <td>N/A</td>
           <td>N/A</td>
           <td>N/A</td>
           <td>N/A</td>
        </tr>
     </tbody>
     <tbody>
        <tr>
           <td>storage</td>
           <td>false</td>
           <td>true</td>
           <td>_key_</td>
           <td>_update 或 add 或 delete _</td>
           <td>_原先的数据_</td>
           <td>_当前写入的数据_</td>
        </tr>
     </tbody>
     <tbody>
        <tr>
           <td>Store:clear</td>
           <td>false</td>
           <td>true</td>
           <td>null</td>
           <td>null</td>
           <td>null</td>
           <td>null</td>
        </tr>
     </tbody>
     <tbody>
        <tr>
           <td>`StoreError`:untrustedDomain</td>
           <td>N/A</td>
           <td>N/A</td>
           <td>N/A</td>
           <td>N/A</td>
           <td>N/A</td>
           <td>N/A</td>
        </tr>
     </tbody>
     <tbody>
        <tr>
           <td>Store:initialization </td>
           <td>false</td>
           <td>true</td>
           <td>null</td>
           <td>null</td>
           <td>null</td>
           <td>null</td>
        </tr>
     </tbody>
     <tbody>
        <tr>
           <td>Store:showSettings</td>
           <td>false</td>
           <td>true</td>
           <td>null</td>
           <td>null</td>
           <td>null</td>
           <td>null</td>
        </tr>
     </tbody>
     <tbody>
        <tr>
           <td>`StoreError`:uncompress</td>
           <td>false</td>
           <td>true</td>
           <td>N/A</td>
           <td>N/A</td>
           <td>N/A</td>
           <td>N/A</td>
        </tr>
     </tbody>
     <tbody>
        <tr>
           <td>`StoreError`:flush </td>
           <td>false</td>
           <td>true</td>
           <td>N/A</td>
           <td>N/A</td>
           <td>N/A</td>
           <td>N/A</td>
        </tr>
     </tbody>
     <tbody>
        <tr>
           <td>`StoreError`:showSettings</td>
           <td>false</td>
           <td>true</td>
           <td>N/A</td>
           <td>N/A</td>
           <td>N/A</td>
           <td>N/A</td>
        </tr>
     </tbody>
     <tbody>
        <tr>
           <td>Store:new</td>
           <td>false</td>
           <td>true</td>
           <td>null</td>
           <td>null</td>
           <td>null</td>
           <td>null</td>
        </tr>
     </tbody>
  </table>