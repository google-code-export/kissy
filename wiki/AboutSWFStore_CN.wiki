#HTML5 时代的先行者

= 版本 =
  * ||2.0||          20100629||

= 介绍 =

经过了针对 YUI的 SWFStore多次改良后，现有代码已无法满足维护的和扩展的需要。此次更新主要是为了不仅仅支持JS 。 更重要的是也要面向 as。
因此独立写了一个新的版本。

另外加入了 [AboutWhitelist_CN 白名单机制] ，并融入了 最新 [AboutAJBridge_CN AJBridge 1.5版本]。

参考了 HTML5 Web storage 接口 http://dev.w3.org/html5/webstorage/ 和事件  并融入了  SWFStore 中。

= 关键变更 =
  * 去掉了YUIBridge 加入了 AJBridge。
  * 加入最新的白名单验证方式。
  * 公开参数关键字变更
  || *YUIBridge* || *AJBridge* || 
  || shareData || 已取消 ||
  || useCompression || useCompression ||
  || browser || browser ||
  * 公开方法变更
  || *YUIBridge* || *AJBridge* || 
  || getValueOf() || getItem() || 
  || getItems() || 已取消 || 
  || getValueAt() || 已取消 || 
  || getNameAt()  || key() || 
  || getLength() || getLength() || 
  || getModificationDate() || getModificationDate() || 
  || calculateCurrentSize() || getSize() || 
  || setItem() || setItem() || 
  || removeItem() || removeItem() || 
  || removeItemAt() || 已取消 || 
  || clear() || clear() || 
  || setSize() || setMinDiskSpace() || 
  || displaySettings() || displaySettings() || 
  || getTypeOf() || 已取消 || 
  || getTypeAt() || 已取消 || 
  || setUseCompression() || 已取消,由swf传参配置 || 
  || getUseCompression() || getUseCompression() || 
  || setShareData() || 已取消。数据将永久跨域跨浏览器，使用前请考虑[AboutWhitelist_CN 白名单机制] || 
  || getShareData() || 已取消 ||
  || hasAdequateDimensions() || hasAdequateDimensions() ||
  * 公开事件变更（保留的则都加了前缀Store，保持事件命名空间）
 || *YUIBridge* || *AJBridge* || 
 || save || Store:flushed ||
 || openingDialog || 已取消 ||
 || inadequateDimensions || 已取消 ||
 || error || 已取消 ||
 || securityError || 已取消 ||
 || contentReady || Store:contentReady||
 || pending|| Store:pending ||
 || quotaExceededError || 已取消 ||
 || success || Store:success ||
 || 不存在  ||  Store:clear ||
 || 不存在 || Store:untrustedDomain ||
 || 不存在 || Store:initialization ||
 || 不存在 || Store:showSettings ||
 || 不存在 || Store:uncompressError ||
 || 不存在 || Store:flushError ||
 || 不存在 || Store:showSettingsError ||


= 详情 =

== 公开的参数关键字： ==
=== useCompression ===
  * 使用压缩标记
  * 类型： String
  * 默认为"true".
=== browser===
  * 指定浏览器专用的本地存储
  * 类型： String
  * 默认为 ""

== 公开给JS的方法： ==
_格式：function(in arguments:type):return-type_
_其中:_
_ * 表示无类型，需要再次匹配或判断_
_void 表示无返回_

=== getLength():uint ===
  * 获取 key的 hash表的长度。相当于key的个数。
  * 如果没有key 则返回 0
=== getItem(key: String):* ===
  * 获得key下的值
  * 没有则返回 null
=== setItem(key:String,data:*): void ===
  * 设置key下的值
  * data可以是任何类型
  * 当key 是已存在且值不同的则，返回的 Store:flushed 事件中的 info 为 “update”
  * 当key 是不存在的则，返回的 Store:flushed 事件中的 info 为 “add”
  * 当key 是已存在且值也相同的则不会做任何事情 ：）
=== key(index: int): String ===

=== removeItem(key:String): void ===
=== clear(): void ===
=== getSize(): uint ===
=== setMinDiskSpace(value: int): String ===
=== getUseCompression(): Boolean ===
=== displaySettings(): void ===
=== hasAdequateDimensions(): Boolean ===
=== getModificationDate(): Date ===


== 公开给JS的事件 ==